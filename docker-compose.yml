version: "3.9"

services:
  # Microservicio de Autenticación
  authentication:
    build:
      context: ./authentication
      dockerfile: deployment/Dockerfile
    container_name: authentication-service
    ports:
      - "${AUTH_PORT}:8090"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db_auth:5432/${DB_AUTH_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db_auth
    networks:
      - backend

  # Base de datos para Autenticación
  db_auth:
    image: postgres:15
    container_name: db_auth
    restart: always
    environment:
      POSTGRES_DB: ${DB_AUTH_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_auth_data:/var/lib/postgresql/data
    ports:
      - "${DB_AUTH_PORT}:5432"
    networks:
      - backend

  # Microservicio de Orders
  orders:
    build:
      context: ./orders
      dockerfile: deployment/Dockerfile
    container_name: orders-service
    ports:
      - "${ORDERS_PORT}:8091"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db_orders:5432/${DB_ORDERS_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db_orders
      - authentication
    networks:
      - backend

  # Base de datos para Orders
  db_orders:
    image: postgres:15
    container_name: db_orders
    restart: always
    environment:
      POSTGRES_DB: ${DB_ORDERS_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_orders_data:/var/lib/postgresql/data
    ports:
      - "${DB_ORDERS_PORT}:5432"
    networks:
      - backend

networks:
  backend:

volumes:
  db_auth_data:
  db_orders_data:
